{ "version": 3, "sources": ["ui-component/extended/Avatar.js", "ui-component/cards/CardSecondaryAction.js", "../node_modules/@mui/material/styles/cssUtils.js", "../node_modules/@mui/material/Skeleton/skeletonClasses.js", "../node_modules/@mui/material/Skeleton/Skeleton.js", "views/pages/operations/Products.js"], "names": ["Avatar", "color", "outline", "size", "sx", "others", "theme", "useTheme", "colorSX", "palette", "background", "paper", "bgcolor", "outlineSX", "border", "borderColor", "sizeSX", "width", "spacing", "height", "CardSecondaryAction", "title", "link", "icon", "Tooltip", "placement", "ButtonBase", "disableRipple", "component", "Link", "href", "target", "alt", "viewBox", "fill", "xmlns", "clipPath", "d", "primary", "main", "id", "transform", "getUnit", "input", "String", "match", "toUnitless", "length", "parseFloat", "getSkeletonUtilityClass", "slot", "generateUtilityClass", "generateUtilityClasses", "_t", "_t2", "_t3", "_t4", "_excluded", "pulseKeyframe", "keyframes", "waveKeyframe", "SkeletonRoot", "styled", "name", "overridesResolver", "props", "styles", "ownerState", "root", "variant", "animation", "hasChildren", "withChildren", "fitContent", "heightAuto", "radiusUnit", "shape", "borderRadius", "radiusValue", "_extends", "display", "backgroundColor", "alpha", "text", "mode", "marginTop", "marginBottom", "transformOrigin", "Math", "round", "content", "visibility", "maxWidth", "css", "action", "hover", "Skeleton", "React", "inProps", "ref", "useThemeProps", "className", "style", "other", "_objectWithoutPropertiesLoose", "Boolean", "children", "classes", "slots", "composeClasses", "useUtilityClasses", "_jsx", "as", "clsx", "ColorBox", "data", "dark", "mb", "justifyContent", "alignItems", "py", "p", "container", "item", "label", "textTransform", "Stocktaking", "navigate", "useNavigate", "useState", "isLoading", "setLoading", "products", "setProducts", "error", "setError", "useEffect", "localStorage", "getItem", "globalconfig", "headers", "Authorization", "getallProducts", "a", "axios", "get", "then", "response", "message", "reFetch", "removeItem", "secondary", "gridSpacing", "xs", "sm", "md", "lg", "xl", "direction", "my", "initialValues", "brandname", "brandtype", "brandtypepricertl", "brandtypepricews", "brandcolor", "validate", "values", "errors", "onSubmit", "setSubmitting", "config", "alert", "post", "console", "touched", "handleChange", "handleBlur", "handleSubmit", "isSubmitting", "m", "helperText", "type", "onChange", "onBlur", "value", "disabled", "undefined", "map", "val", "key"], "mappings": "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", "file": "static/js/10.ffa6a974.chunk.js", "sourcesContent": ["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n", "import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n", "export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    let pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    } // Convert length in pixels to the output unit\n\n\n    let outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}", "import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ${0}, transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, theme.palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;", "import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\n// material-ui\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport { Box, Card, Grid, Typography, TextField, FormControl, Button, CardContent } from '@mui/material';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// ===============================|| COLOR BOX ||=============================== //\r\n\r\nconst ColorBox = ({ bgcolor, title, data, dark }) => (\r\n    <>\r\n        <Card sx={{ mb: 3 }}>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    py: 4.5,\r\n                    bgcolor,\r\n                    color: dark ? 'grey.800' : '#ffffff'\r\n                }}\r\n            >\r\n                {title && (\r\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                        {title}\r\n                    </Typography>\r\n                )}\r\n                {!title && <Box sx={{ p: 1.15 }} />}\r\n            </Box>\r\n        </Card>\r\n        {data && (\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"subtitle2\">{data.label}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"subtitle1\" sx={{ textTransform: 'uppercase' }}>\r\n                        {data.color}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        )}\r\n    </>\r\n);\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst Stocktaking = ({ ...others }) => {\r\n    const navigate = useNavigate();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [products, setProducts] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        // CHECK LOGIN\r\n        if (!localStorage.getItem('authToken')) {\r\n            navigate('/login');\r\n            setError('No auth');\r\n        }\r\n        // CHECK LOGIN\r\n    }, [navigate]);\r\n\r\n    function logout() {\r\n        localStorage.removeItem('authToken');\r\n        navigate('/login');\r\n    }\r\n\r\n    const globalconfig = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n        }\r\n    };\r\n\r\n    // 👇👇 FINDALL\r\n\r\n    useEffect(() => {\r\n        const getallProducts = async () => {\r\n            try {\r\n                await axios.get(`https://dry-stream-10813.herokuapp.com/api/private/getallproducts`, globalconfig).then((response) => {\r\n                    setProducts(response.data.data);\r\n                    setLoading(false);\r\n                });\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n\r\n        getallProducts();\r\n    }, []);\r\n\r\n    const reFetch = async () => {\r\n        setLoading(true);\r\n        await axios.get(`https://dry-stream-10813.herokuapp.com/api/private/getallproducts`, globalconfig).then((response) => {\r\n            setProducts(response.data.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    return error ? (\r\n        logout()\r\n    ) : (\r\n        <MainCard title=\"Color Palette\" secondary={<SecondaryAction link=\"/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Add Products\">\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                {isLoading ? (\r\n                                    <Card>\r\n                                        <CardContent>\r\n                                            <Grid container direction=\"column\">\r\n                                                <Grid item>\r\n                                                    <Grid container justifyContent=\"space-between\">\r\n                                                        <Grid item>\r\n                                                            <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Skeleton variant=\"rectangular\" width={34} height={34} />\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Skeleton variant=\"rectangular\" height={30} />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                ) : (\r\n                                    <Formik\r\n                                        initialValues={{\r\n                                            brandname: '',\r\n                                            brandtype: '',\r\n                                            brandtypepricertl: 0,\r\n                                            brandtypepricews: 0,\r\n                                            brandcolor: '#e3d4ee'\r\n                                        }}\r\n                                        validate={(values) => {\r\n                                            const errors = {};\r\n                                            if (!values.brandname && !values.brandtype) {\r\n                                                errors.brandname = 'Required';\r\n                                                errors.brandtype = 'Required';\r\n                                                errors.brandtypepricertl = 'Required';\r\n                                                errors.brandtypepricews = 'Required';\r\n                                            }\r\n                                            return errors;\r\n                                        }}\r\n                                        onSubmit={async (values, { setSubmitting }) => {\r\n                                            const config = {\r\n                                                headers: {\r\n                                                    'Content-Type': 'application/json',\r\n                                                    Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n                                                }\r\n                                            };\r\n\r\n                                            const brandname = values.brandname;\r\n                                            const brandtype = values.brandtype;\r\n                                            const brandtypepricertl = values.brandtypepricertl;\r\n                                            const brandtypepricews = values.brandtypepricews;\r\n                                            const brandcolor = values.brandcolor;\r\n\r\n                                            try {\r\n                                                alert(\r\n                                                    `${brandname}, ${brandtype}, ${brandtypepricertl}, ${brandtypepricews}, ${brandcolor}`\r\n                                                );\r\n                                                const { data } = await axios.post(\r\n                                                    'https://dry-stream-10813.herokuapp.com/api/private/addproduct',\r\n                                                    { brandname, brandtype, brandtypepricertl, brandtypepricews, brandcolor },\r\n                                                    config\r\n                                                );\r\n\r\n                                                if (data === '') {\r\n                                                    setSubmitting(true);\r\n                                                    setLoading(true);\r\n                                                } else {\r\n                                                    setSubmitting(false);\r\n                                                    setLoading(false);\r\n                                                }\r\n\r\n                                                reFetch();\r\n                                            } catch (err) {\r\n                                                console.error(err);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        {({\r\n                                            values,\r\n                                            errors,\r\n                                            touched,\r\n                                            handleChange,\r\n                                            handleBlur,\r\n                                            handleSubmit,\r\n                                            isSubmitting\r\n                                            /* and other goodies */\r\n                                        }) => (\r\n                                            <form onSubmit={handleSubmit}>\r\n                                                <FormControl sx={{ m: 4 }}>\r\n                                                    <TextField\r\n                                                        name=\"brandname\"\r\n                                                        helperText=\"The brand name\"\r\n                                                        id=\"brandname\"\r\n                                                        label=\"Brand Name\"\r\n                                                        type=\"text\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.brandname}\r\n                                                    />\r\n                                                </FormControl>\r\n                                                {errors.brandname && touched.brandname && errors.brandname}\r\n                                                <FormControl sx={{ m: 4 }}>\r\n                                                    <TextField\r\n                                                        name=\"brandtype\"\r\n                                                        helperText=\"The brand type/variant\"\r\n                                                        id=\"brandtype\"\r\n                                                        label=\"Brand Type\"\r\n                                                        type=\"text\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.brandtype}\r\n                                                    />\r\n                                                </FormControl>\r\n                                                {errors.brandtype && touched.brandtype && errors.brandtype}\r\n                                                <FormControl sx={{ m: 4 }}>\r\n                                                    <TextField\r\n                                                        name=\"brandtypepricertl\"\r\n                                                        helperText=\"Retail Profit\"\r\n                                                        id=\"brandtypepricertl\"\r\n                                                        label=\"Retail Profit\"\r\n                                                        type=\"number\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.brandtypepricertl}\r\n                                                    />\r\n                                                </FormControl>\r\n                                                {errors.brandtypepricertl && touched.brandtypepricertl && errors.brandtypepricertl}\r\n                                                <FormControl sx={{ m: 4 }}>\r\n                                                    <TextField\r\n                                                        name=\"brandtypepricews\"\r\n                                                        helperText=\"Wholesale Profit\"\r\n                                                        id=\"brandtypepricews\"\r\n                                                        label=\"Wholesale Profit\"\r\n                                                        type=\"number\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.brandtypepricews}\r\n                                                    />\r\n                                                </FormControl>\r\n                                                {errors.brandtypepricews && touched.brandtypepricews && errors.brandtypepricews}\r\n                                                <FormControl sx={{ m: 4 }}>\r\n                                                    <TextField\r\n                                                        name=\"brandcolor\"\r\n                                                        helperText=\"Color identifier for this variant\"\r\n                                                        id=\"brandcolor\"\r\n                                                        label=\"Variant Color\"\r\n                                                        type=\"color\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.brandcolor}\r\n                                                    />\r\n                                                </FormControl>\r\n                                                {errors.brandcolor && touched.brandcolor && errors.brandcolor}\r\n                                                <Button type=\"submit\" disabled={isSubmitting}>\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </form>\r\n                                        )}\r\n                                    </Formik>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Products\">\r\n                        <Grid container spacing={gridSpacing}>\r\n                            {products !== undefined ? (\r\n                                products.map((val, key) => (\r\n                                    <Grid item xs={12} sm={6} md={4} lg={2} key={key}>\r\n                                        <ColorBox bgcolor={val.brandcolor} data={{ label: '', color: '' }} title={val.brandtype} dark />\r\n                                    </Grid>\r\n                                ))\r\n                            ) : (\r\n                                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                    <ColorBox bgcolor=\"error.main\" data={{ label: '', color: '' }} title=\"Add products\" />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Stocktaking;\r\n"], "sourceRoot": "" }