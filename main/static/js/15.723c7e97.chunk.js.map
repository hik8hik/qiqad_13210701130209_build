{ "version": 3, "sources": ["ui-component/extended/Avatar.js", "ui-component/cards/CardSecondaryAction.js", "views/pages/operations/Stockstaking.js"], "names": ["Avatar", "color", "outline", "size", "sx", "others", "theme", "useTheme", "colorSX", "palette", "background", "paper", "bgcolor", "outlineSX", "border", "borderColor", "sizeSX", "width", "spacing", "height", "CardSecondaryAction", "title", "link", "icon", "Tooltip", "placement", "ButtonBase", "disableRipple", "component", "Link", "href", "target", "alt", "viewBox", "fill", "xmlns", "clipPath", "d", "primary", "main", "id", "transform", "Stocktaking", "navigate", "useNavigate", "useState", "stocks", "setStocks", "products", "setProducts", "setSelectedproduct", "specificproductid", "setSpecificproductid", "brandnamess", "setBrandname", "brandtypess", "setBrandtype", "pricertl", "setPricertl", "pricews", "setPricews", "open", "setOpen", "error", "setError", "useEffect", "localStorage", "getItem", "useRef", "current", "waitmsg", "setWaitmsg", "config", "headers", "Authorization", "getData", "a", "axios", "get", "then", "response", "data", "sresponse", "message", "reFetch", "createData", "name", "calories", "fat", "carbs", "protein", "fetchSpecificProduct", "brandtypepricertl", "brandtypepricews", "brandname", "brandtype", "console", "log", "handleProductChange", "event", "value", "spid", "removeItem", "secondary", "zIndex", "drawer", "onClick", "m", "container", "gridSpacing", "item", "xs", "Paper", "initialValues", "brandnametypeid", "openingstock", "addedstock", "closingstock", "soldstock", "ws", "rtl", "profit", "wssales", "rtlsales", "validate", "values", "errors", "onSubmit", "setSubmitting", "resetForm", "alert", "post", "handleChange", "touched", "handleBlur", "handleSubmit", "isSubmitting", "direction", "justifyContent", "variant", "my", "minWidth", "align", "scope", "labelId", "onChange", "label", "tabIndex", "undefined", "map", "option", "_id", "helpertext", "type", "onBlur", "disabled", "val", "key"], "mappings": "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", "file": "static/js/15.723c7e97.chunk.js", "sourcesContent": ["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n", "import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n", "/* eslint no-underscore-dangle: 0 */\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\n// material-ui\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport { Box, Card, CardContent, Grid, Typography, TextField, FormControl, Button, Input } from '@mui/material';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\nconst Stocktaking = ({ ...others }) => {\r\n    const navigate = useNavigate();\r\n    const [stocks, setStocks] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productselected, setProductselected] = useState([]);\r\n    const [selectedproduct, setSelectedproduct] = useState('');\r\n    const [specificproductid, setSpecificproductid] = useState('');\r\n    const [brandnamess, setBrandname] = useState('');\r\n    const [brandtypess, setBrandtype] = useState('');\r\n    const [pricertl, setPricertl] = useState(0);\r\n    const [pricews, setPricews] = useState(0);\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        // CHECK LOGIN\r\n        if (!localStorage.getItem('authToken')) {\r\n            setError('No auth');\r\n            navigate('/login');\r\n        }\r\n        // CHECK LOGIN\r\n    }, [navigate]);\r\n\r\n    function logout() {\r\n        localStorage.removeItem('authToken');\r\n        navigate('/login');\r\n    }\r\n\r\n    const specificproductidref = useRef();\r\n    specificproductidref.current = specificproductid;\r\n\r\n    const [waitmsg, setWaitmsg] = useState('Please Wait');\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setWaitmsg('Try going back⏱ or check your network🔌');\r\n    };\r\n\r\n    // 👇👇 FINDALL\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                setWaitmsg('Starting products fetch');\r\n                await axios.get(`https://dry-stream-10813.herokuapp.com/api/private/getallproducts`, config).then((response) => {\r\n                    setProducts(response.data.data);\r\n                });\r\n                setWaitmsg('Done fetching products');\r\n\r\n                setWaitmsg('Starting stocks fetch');\r\n                await axios.get(`https://dry-stream-10813.herokuapp.com/api/private/getallstocks`, config).then((sresponse) => {\r\n                    setStocks(sresponse.data.data);\r\n                });\r\n                setWaitmsg('Done fetching stocks');\r\n\r\n                setOpen(false);\r\n            } catch (error) {\r\n                setWaitmsg(error.message);\r\n                setError(error.message);\r\n            }\r\n        };\r\n\r\n        getData();\r\n    }, []);\r\n\r\n    const reFetch = async () => {\r\n        setWaitmsg('Starting stocks fetch');\r\n        await axios.get(`https://dry-stream-10813.herokuapp.com/api/private/getallstocks`, config).then((sresponse) => {\r\n            setStocks(sresponse.data.data);\r\n        });\r\n        setWaitmsg('Done fetching stocks');\r\n    };\r\n\r\n    function createData(name, calories, fat, carbs, protein) {\r\n        return { name, calories, fat, carbs, protein };\r\n    }\r\n\r\n    const rows = [\r\n        createData('Safari', 159, 6.0, 24, 4.0),\r\n        createData('Supermatch', 237, 9.0, 37, 4.3),\r\n        createData('Superman', 262, 16.0, 24, 6.0),\r\n        createData('Roster', 305, 3.7, 67, 4.3),\r\n        createData('IMSI', 356, 16.0, 49, 3.9)\r\n    ];\r\n\r\n    async function fetchSpecificProduct(id) {\r\n        try {\r\n            if (id !== '' && id !== 'start') {\r\n                setOpen(true);\r\n                setWaitmsg('Starting specific product fetch');\r\n                const { data } = await axios.get(`https://dry-stream-10813.herokuapp.com/api/private/getproductwid/${id}`, config);\r\n                setWaitmsg('Setting specific product details');\r\n                setSelectedproduct(data.data);\r\n                setWaitmsg('Setting specific product prices');\r\n                setPricertl(data.data.brandtypepricertl);\r\n                setPricews(data.data.brandtypepricews);\r\n                setWaitmsg('Setting specific product names');\r\n                setBrandname(data.data.brandname);\r\n                setBrandtype(data.data.brandtype);\r\n                setWaitmsg('Done');\r\n                setOpen(false);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleProductChange = async (event) => {\r\n        const spid = await event.target.value;\r\n        setSpecificproductid(spid);\r\n        fetchSpecificProduct(spid);\r\n    };\r\n\r\n    return error ? (\r\n        logout()\r\n    ) : (\r\n        <MainCard title=\"Color Palette\" secondary={<SecondaryAction link=\"/\" />}>\r\n            <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={open} onClick={handleClose}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Typography sx={{ m: 4 }}>{waitmsg}</Typography>\r\n            </Backdrop>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Add stock\" secondary={<SecondaryAction link=\"/\" />}>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <TableContainer component={Paper}>\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        brandnametypeid: '',\r\n                                        brandname: '',\r\n                                        brandtype: '',\r\n                                        openingstock: 0,\r\n                                        addedstock: 0,\r\n                                        closingstock: 0,\r\n                                        soldstock: 0,\r\n                                        ws: 0,\r\n                                        rtl: 0,\r\n                                        profit: 0,\r\n                                        wssales: 0,\r\n                                        rtlsales: 0\r\n                                    }}\r\n                                    validate={(values) => {\r\n                                        const errors = {};\r\n                                        if (\r\n                                            !values.brandnametypeid &&\r\n                                            !values.openingstock &&\r\n                                            !values.addedstock &&\r\n                                            !values.closingstock &&\r\n                                            !values.soldstock &&\r\n                                            !values.ws &&\r\n                                            !values.rtl &&\r\n                                            !values.profit &&\r\n                                            !values.wssales &&\r\n                                            !values.rtlsales\r\n                                        ) {\r\n                                            errors.brandnametypeid = 'Required';\r\n                                            errors.openingstock = 'Required';\r\n                                            errors.addedstock = 'Required';\r\n                                            errors.closingstock = 'Required';\r\n                                            errors.soldstock = 'Required';\r\n                                            errors.ws = 'Required';\r\n                                            errors.rtl = 'Required';\r\n                                            errors.profit = 'Required';\r\n                                            errors.wssales = 'Required';\r\n                                            errors.rtlsales = 'Required';\r\n                                        }\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n                                        const config = {\r\n                                            headers: {\r\n                                                'Content-Type': 'application/json',\r\n                                                Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n                                            }\r\n                                        };\r\n\r\n                                        const brandnametypeid = specificproductid;\r\n                                        const brandname = brandnamess;\r\n                                        const brandtype = brandtypess;\r\n                                        const openingstock = values.openingstock;\r\n                                        const addedstock = values.addedstock;\r\n                                        const closingstock = values.closingstock;\r\n                                        const soldstock = values.openingstock + values.addedstock - values.closingstock;\r\n                                        const ws = pricews * values.wssales;\r\n                                        const rtl =\r\n                                            pricertl * (values.openingstock + values.addedstock - values.closingstock - values.wssales);\r\n                                        const wssales = values.wssales;\r\n                                        const rtlsales = values.openingstock + values.addedstock - values.closingstock - values.wssales;\r\n                                        const profit = pricews * values.wssales + pricertl * values.rtlsales;\r\n\r\n                                        try {\r\n                                            alert(\r\n                                                `${brandnametypeid},${brandname},${brandtype},${openingstock},${addedstock},${closingstock},${soldstock},${ws},${rtl},${wssales},${rtlsales},${profit}`\r\n                                            );\r\n                                            const { data } = await axios.post(\r\n                                                'https://dry-stream-10813.herokuapp.com/api/private/addstock',\r\n                                                {\r\n                                                    brandnametypeid,\r\n                                                    brandname,\r\n                                                    brandtype,\r\n                                                    openingstock,\r\n                                                    addedstock,\r\n                                                    closingstock,\r\n                                                    soldstock,\r\n                                                    ws,\r\n                                                    rtl,\r\n                                                    wssales,\r\n                                                    rtlsales,\r\n                                                    profit\r\n                                                },\r\n                                                config\r\n                                            );\r\n\r\n                                            if (data === '') {\r\n                                                setSubmitting(true);\r\n                                                setOpen(true);\r\n                                            } else {\r\n                                                setSubmitting(false);\r\n                                                setOpen(false);\r\n                                            }\r\n                                            resetForm({});\r\n                                            reFetch();\r\n                                        } catch (err) {\r\n                                            console.error(err);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {({\r\n                                        values,\r\n                                        errors,\r\n                                        touched,\r\n                                        handleChange,\r\n                                        handleBlur,\r\n                                        handleSubmit,\r\n                                        isSubmitting\r\n                                        /* and other goodies */\r\n                                    }) => (\r\n                                        <form onSubmit={handleSubmit}>\r\n                                            {isSubmitting ? (\r\n                                                <Card>\r\n                                                    <CardContent>\r\n                                                        <Grid container direction=\"column\">\r\n                                                            <Grid item>\r\n                                                                <Grid container justifyContent=\"space-between\">\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                    <Grid item>\r\n                                                                        <Skeleton variant=\"rectangular\" width={88} height={44} />\r\n                                                                    </Grid>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                            <Grid item>\r\n                                                                <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\r\n                                                            </Grid>\r\n                                                            <Grid item>\r\n                                                                <Skeleton variant=\"rectangular\" height={30} />\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            ) : (\r\n                                                <TableContainer component={Paper}>\r\n                                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                                        <TableHead>\r\n                                                            <TableRow>\r\n                                                                <TableCell align=\"center\">Select Product</TableCell>\r\n                                                                <TableCell align=\"center\">Opening</TableCell>\r\n                                                                <TableCell align=\"center\">Added</TableCell>\r\n                                                                <TableCell align=\"center\">Closing</TableCell>\r\n                                                                <TableCell align=\"center\">Sold</TableCell>\r\n                                                                <TableCell align=\"center\">WS P</TableCell>\r\n                                                                <TableCell align=\"center\">RS P</TableCell>\r\n                                                                <TableCell align=\"center\">Profit</TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <Select\r\n                                                                        name=\"brandnametypeid\"\r\n                                                                        labelId=\"demo-simple-select-standard-label\"\r\n                                                                        id=\"demo-simple-select-standard\"\r\n                                                                        value={specificproductid}\r\n                                                                        onChange={handleProductChange}\r\n                                                                        label=\"Age\"\r\n                                                                        tabIndex=\"0\"\r\n                                                                    >\r\n                                                                        <MenuItem value=\"start\">\r\n                                                                            <em>None</em>\r\n                                                                        </MenuItem>\r\n                                                                        {products !== undefined ? (\r\n                                                                            products.map((option) => (\r\n                                                                                <MenuItem key={option._id} value={option._id}>\r\n                                                                                    {`Brand: ${option.brandname} Type: ${option.brandtype}`}\r\n                                                                                </MenuItem>\r\n                                                                            ))\r\n                                                                        ) : (\r\n                                                                            <MenuItem value=\"\">\r\n                                                                                <em>You do not have products</em>\r\n                                                                            </MenuItem>\r\n                                                                        )}\r\n                                                                    </Select>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <Input\r\n                                                                        name=\"openingstock\"\r\n                                                                        helpertext=\"The brand name of the prodduct\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={values.openingstock}\r\n                                                                        tabIndex=\"-1\"\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"addedstock\"\r\n                                                                        helpertext=\"The brand name of the prodduct\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={values.addedstock}\r\n                                                                        tabIndex=\"-2\"\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"closingstock\"\r\n                                                                        helpertext=\"The brand name of the prodduct\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={values.closingstock}\r\n                                                                        tabIndex=\"-3\"\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"soldstock\"\r\n                                                                        helpertext=\"The brand name of the prodduct\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={\r\n                                                                            values.openingstock + values.addedstock - values.closingstock\r\n                                                                        }\r\n                                                                        disabled\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"ws\"\r\n                                                                        helpertext=\"The brand name of the product\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label={`WS P: ${pricews}`}\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={pricews * values.wssales}\r\n                                                                        disabled\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"rtl\"\r\n                                                                        helpertext=\"The brand name of the product\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={\r\n                                                                            pricertl *\r\n                                                                            (values.openingstock +\r\n                                                                                values.addedstock -\r\n                                                                                values.closingstock -\r\n                                                                                values.wssales)\r\n                                                                        }\r\n                                                                        disabled\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"profit\"\r\n                                                                        helpertext=\"The brand name of the product\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={pricews * values.wssales + pricertl * values.rtlsales}\r\n                                                                        disabled\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"wssales\"\r\n                                                                        helpertext=\"The brand name of the product\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={values.wssales}\r\n                                                                        tabIndex=\"-4\"\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Input\r\n                                                                        name=\"rtlsales\"\r\n                                                                        helpertext=\"The brand name of the product\"\r\n                                                                        id=\"demo-helper-text-aligned\"\r\n                                                                        label=\"Brand Name\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={\r\n                                                                            values.openingstock +\r\n                                                                            values.addedstock -\r\n                                                                            values.closingstock -\r\n                                                                            values.wssales\r\n                                                                        }\r\n                                                                        tabIndex=\"-5\"\r\n                                                                        disabled\r\n                                                                    />\r\n                                                                </TableCell>\r\n                                                                <TableCell align=\"right\">\r\n                                                                    <Button type=\"submit\" disabled={isSubmitting}>\r\n                                                                        Submit\r\n                                                                    </Button>\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableBody>\r\n                                                        <TableFooter>\r\n                                                            <TableRow>\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell />\r\n                                                                <TableCell align=\"center\">W/Sales</TableCell>\r\n                                                                <TableCell align=\"center\">R/Sales</TableCell>\r\n                                                                <TableCell />\r\n                                                            </TableRow>\r\n                                                        </TableFooter>\r\n                                                    </Table>\r\n                                                </TableContainer>\r\n                                            )}\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Stocks\">\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Brand</TableCell>\r\n                                            <TableCell align=\"right\">Variant</TableCell>\r\n                                            <TableCell align=\"right\">Opening</TableCell>\r\n                                            <TableCell align=\"right\">Added</TableCell>\r\n                                            <TableCell align=\"right\">Closing</TableCell>\r\n                                            <TableCell align=\"right\">Sold</TableCell>\r\n                                            <TableCell align=\"right\">WS_S</TableCell>\r\n                                            <TableCell align=\"right\">RT_S</TableCell>\r\n                                            <TableCell align=\"right\">WS_P</TableCell>\r\n                                            <TableCell align=\"right\">RT_P</TableCell>\r\n                                            <TableCell align=\"right\">Total P</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {stocks !== undefined ? (\r\n                                            stocks.map((val, key) => (\r\n                                                <TableRow key={val._id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                                    <TableCell component=\"th\" scope=\"val\">\r\n                                                        {val.brandname}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{val.brandtype}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.openingstock}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.addedstock}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.closingstock}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.soldstock}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.wssales}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.rtlsales}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.ws}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.rtl}</TableCell>\r\n                                                    <TableCell align=\"right\">{val.profit}</TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        ) : (\r\n                                            <TableRow>No Stocks</TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TableCell>Brand</TableCell>\r\n                                            <TableCell align=\"right\">Variant</TableCell>\r\n                                            <TableCell align=\"right\">Opening</TableCell>\r\n                                            <TableCell align=\"right\">Added</TableCell>\r\n                                            <TableCell align=\"right\">Closing</TableCell>\r\n                                            <TableCell align=\"right\">Sold</TableCell>\r\n                                            <TableCell align=\"right\">WS_S</TableCell>\r\n                                            <TableCell align=\"right\">RT_S</TableCell>\r\n                                            <TableCell align=\"right\">WS_P</TableCell>\r\n                                            <TableCell align=\"right\">RT_P</TableCell>\r\n                                            <TableCell align=\"right\">Total P</TableCell>\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Stocktaking;\r\n"], "sourceRoot": "" }